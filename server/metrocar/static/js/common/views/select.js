// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['backbone'], function(Backbone) {
    var Select;
    return Select = (function(_super) {

      __extends(Select, _super);

      Select.name = 'Select';

      function Select() {
        return Select.__super__.constructor.apply(this, arguments);
      }

      /*
          Expected to be created with el: some element containing a single <select>
      */


      Select.prototype.events = {
        'change select': 'changed'
      };

      Select.prototype.changed = function() {
        return this.trigger('change', this.getValue());
      };

      Select.prototype.getValue = function() {
        var val;
        if (val = this.$('select').val()) {
          return val;
        } else {
          return null;
        }
      };

      Select.prototype.setValue = function(value) {
        this.$('select').val(value);
        return this.changed();
      };

      return Select;

    })(Backbone.View);
  });

}).call(this);
