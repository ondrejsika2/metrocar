// Generated by CoffeeScript 1.3.1
(function() {

  define(['tests/chai', 'audit/usagehistory/utils'], function(_arg, utils) {
    var assert, routeData, should;
    assert = _arg.assert, should = _arg.should;
    should();
    routeData = [
      {
        events: [],
        entries: [
          {
            location: [1, 2],
            entries: [
              {
                location: [1, 2],
                timestamp: '1234',
                added: '45468',
                unit_id: 1234,
                user_id: 123,
                velocity: 1,
                consumption: 12
              }, {
                location: [1, 2],
                timestamp: '12345',
                unit_id: 1234,
                user_id: 123,
                velocity: 2,
                throttle: 20
              }
            ]
          }, {
            location: [2, 3],
            entries: [
              {
                consumption: 12.5,
                velocity: 3,
                timestamp: '123456'
              }
            ]
          }
        ]
      }, {
        events: [],
        entries: [
          {
            location: [2, 3],
            entries: [
              {
                location: [1, 2],
                timestamp: '1234',
                unit_id: 1234,
                user_id: 123,
                velocity: 1.4,
                event: 'CRASH',
                fuel_remaining: 31.2
              }
            ]
          }
        ]
      }
    ];
    return describe('utils', function() {
      describe('extractCategories', function() {
        return it('should extract graphable categories from route-data', function() {
          var categories;
          categories = utils.extractCategories(routeData).sort();
          return categories.should.deep.equal(['consumption', 'fuel_remaining', 'throttle', 'velocity']);
        });
      });
      return describe('_extractGraphData', function() {
        return it('should restructure route-data to a format suitable for graphing', function() {
          var result;
          result = utils._extractGraphData(routeData, ['velocity']);
          return result.should.deep.equal({
            velocity: [
              [
                {
                  value: 1,
                  timestamp: '1234'
                }, {
                  value: 2,
                  timestamp: '12345'
                }, {
                  value: 3,
                  timestamp: '123456'
                }
              ], [
                {
                  value: 1.4,
                  timestamp: '1234'
                }
              ]
            ]
          });
        });
      });
    });
  });

}).call(this);
